{"ast":null,"code":"import _regeneratorRuntime from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import postService from'../services/posts';var searchReducer=function searchReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SET_SEARCH_RESULTS':return action.payload;case'TOGGLE_SEARCH_VOTE':return _objectSpread(_objectSpread({},state),{},{results:state.results.map(function(r){return r.id!==action.payload.id?r:_objectSpread(_objectSpread({},r),action.payload.data);})});case'LOAD_SEARCH_POSTS':return _objectSpread(_objectSpread({},action.payload),{},{results:[].concat(_toConsumableArray(state.results),_toConsumableArray(action.payload.results))});default:return state;}};export var setSearchResults=function setSearchResults(query){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var results;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return postService.getSearchResults(query,10,1);case 2:results=_context.sent;dispatch({type:'SET_SEARCH_RESULTS',payload:results});case 4:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var loadSearchPosts=function loadSearchPosts(query,page){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var results;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return postService.getSearchResults(query,10,page);case 2:results=_context2.sent;dispatch({type:'LOAD_SEARCH_POSTS',payload:results});case 4:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var toggleUpvote=function toggleUpvote(id,upvotedBy,downvotedBy){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var pointsCount;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:pointsCount=upvotedBy.length-downvotedBy.length;if(pointsCount<0){pointsCount=0;}dispatch({type:'TOGGLE_SEARCH_VOTE',payload:{id:id,data:{upvotedBy:upvotedBy,pointsCount:pointsCount,downvotedBy:downvotedBy}}});_context3.next=5;return postService.upvotePost(id);case 5:case\"end\":return _context3.stop();}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var toggleDownvote=function toggleDownvote(id,downvotedBy,upvotedBy){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){var pointsCount;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:pointsCount=upvotedBy.length-downvotedBy.length;if(pointsCount<0){pointsCount=0;}dispatch({type:'TOGGLE_SEARCH_VOTE',payload:{id:id,data:{upvotedBy:upvotedBy,pointsCount:pointsCount,downvotedBy:downvotedBy}}});_context4.next=5;return postService.downvotePost(id);case 5:case\"end\":return _context4.stop();}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export default searchReducer;","map":{"version":3,"names":["postService","searchReducer","state","arguments","length","undefined","action","type","payload","_objectSpread","results","map","r","id","data","concat","_toConsumableArray","setSearchResults","query","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_callee$","_context","prev","next","getSearchResults","sent","stop","_x","apply","loadSearchPosts","page","_ref2","_callee2","_callee2$","_context2","_x2","toggleUpvote","upvotedBy","downvotedBy","_ref3","_callee3","pointsCount","_callee3$","_context3","upvotePost","_x3","toggleDownvote","_ref4","_callee4","_callee4$","_context4","downvotePost","_x4"],"sources":["C:/Ak/E/reddish-master/client/src/reducers/searchReducer.js"],"sourcesContent":["import postService from '../services/posts';\n\nconst searchReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_SEARCH_RESULTS':\n      return action.payload;\n    case 'TOGGLE_SEARCH_VOTE':\n      return {\n        ...state,\n        results: state.results.map((r) =>\n          r.id !== action.payload.id ? r : { ...r, ...action.payload.data }\n        ),\n      };\n    case 'LOAD_SEARCH_POSTS':\n      return {\n        ...action.payload,\n        results: [...state.results, ...action.payload.results],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setSearchResults = (query) => {\n  return async (dispatch) => {\n    const results = await postService.getSearchResults(query, 10, 1);\n\n    dispatch({\n      type: 'SET_SEARCH_RESULTS',\n      payload: results,\n    });\n  };\n};\n\nexport const loadSearchPosts = (query, page) => {\n  return async (dispatch) => {\n    const results = await postService.getSearchResults(query, 10, page);\n\n    dispatch({\n      type: 'LOAD_SEARCH_POSTS',\n      payload: results,\n    });\n  };\n};\n\nexport const toggleUpvote = (id, upvotedBy, downvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_SEARCH_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.upvotePost(id);\n  };\n};\n\nexport const toggleDownvote = (id, downvotedBy, upvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_SEARCH_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.downvotePost(id);\n  };\n};\n\nexport default searchReducer;\n"],"mappings":"meAAA,MAAO,CAAAA,WAAW,KAAM,mBAAmB,CAE3C,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAA6B,IAAzB,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAAE,CAAAG,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACzC,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,oBAAoB,CACvB,MAAO,CAAAD,MAAM,CAACE,OAAO,CACvB,IAAK,oBAAoB,CACvB,OAAAC,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRQ,OAAO,CAAER,KAAK,CAACQ,OAAO,CAACC,GAAG,CAAC,SAACC,CAAC,QAC3B,CAAAA,CAAC,CAACC,EAAE,GAAKP,MAAM,CAACE,OAAO,CAACK,EAAE,CAAGD,CAAC,CAAAH,aAAA,CAAAA,aAAA,IAAQG,CAAC,EAAKN,MAAM,CAACE,OAAO,CAACM,IAAI,CAAE,GAClE,GAEL,IAAK,mBAAmB,CACtB,OAAAL,aAAA,CAAAA,aAAA,IACKH,MAAM,CAACE,OAAO,MACjBE,OAAO,IAAAK,MAAA,CAAAC,kBAAA,CAAMd,KAAK,CAACQ,OAAO,EAAAM,kBAAA,CAAKV,MAAM,CAACE,OAAO,CAACE,OAAO,EAAC,GAE1D,QACE,MAAO,CAAAR,KAAK,CAAC,CAEnB,CAAC,CAED,MAAO,IAAM,CAAAe,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,KAAK,CAAK,CACzC,kCAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAO,SAAAC,QAAOC,QAAQ,MAAAd,OAAA,QAAAW,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACE,CAAA7B,WAAW,CAAC8B,gBAAgB,CAACZ,KAAK,CAAE,EAAE,CAAE,CAAC,CAAC,QAA1DR,OAAO,CAAAiB,QAAA,CAAAI,IAAA,CAEbP,QAAQ,CAAC,CACPjB,IAAI,CAAE,oBAAoB,CAC1BC,OAAO,CAAEE,OACX,CAAC,CAAC,CAAC,wBAAAiB,QAAA,CAAAK,IAAA,MAAAT,OAAA,GACJ,mBAAAU,EAAA,SAAAd,IAAA,CAAAe,KAAA,MAAA/B,SAAA,QACH,CAAC,CAED,MAAO,IAAM,CAAAgC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIjB,KAAK,CAAEkB,IAAI,CAAK,CAC9C,kCAAAC,KAAA,CAAAjB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAO,SAAAgB,SAAOd,QAAQ,MAAAd,OAAA,QAAAW,mBAAA,GAAAI,IAAA,UAAAc,UAAAC,SAAA,iBAAAA,SAAA,CAAAZ,IAAA,CAAAY,SAAA,CAAAX,IAAA,SAAAW,SAAA,CAAAX,IAAA,SACE,CAAA7B,WAAW,CAAC8B,gBAAgB,CAACZ,KAAK,CAAE,EAAE,CAAEkB,IAAI,CAAC,QAA7D1B,OAAO,CAAA8B,SAAA,CAAAT,IAAA,CAEbP,QAAQ,CAAC,CACPjB,IAAI,CAAE,mBAAmB,CACzBC,OAAO,CAAEE,OACX,CAAC,CAAC,CAAC,wBAAA8B,SAAA,CAAAR,IAAA,MAAAM,QAAA,GACJ,mBAAAG,GAAA,SAAAJ,KAAA,CAAAH,KAAA,MAAA/B,SAAA,QACH,CAAC,CAED,MAAO,IAAM,CAAAuC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAI7B,EAAE,CAAE8B,SAAS,CAAEC,WAAW,CAAK,CAC1D,kCAAAC,KAAA,CAAAzB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAO,SAAAwB,SAAOtB,QAAQ,MAAAuB,WAAA,QAAA1B,mBAAA,GAAAI,IAAA,UAAAuB,UAAAC,SAAA,iBAAAA,SAAA,CAAArB,IAAA,CAAAqB,SAAA,CAAApB,IAAA,SAChBkB,WAAW,CAAGJ,SAAS,CAACvC,MAAM,CAAGwC,WAAW,CAACxC,MAAM,CACvD,GAAI2C,WAAW,CAAG,CAAC,CAAE,CACnBA,WAAW,CAAG,CAAC,CACjB,CAEAvB,QAAQ,CAAC,CACPjB,IAAI,CAAE,oBAAoB,CAC1BC,OAAO,CAAE,CAAEK,EAAE,CAAFA,EAAE,CAAEC,IAAI,CAAE,CAAE6B,SAAS,CAATA,SAAS,CAAEI,WAAW,CAAXA,WAAW,CAAEH,WAAW,CAAXA,WAAY,CAAE,CAC/D,CAAC,CAAC,CAACK,SAAA,CAAApB,IAAA,SAEG,CAAA7B,WAAW,CAACkD,UAAU,CAACrC,EAAE,CAAC,yBAAAoC,SAAA,CAAAjB,IAAA,MAAAc,QAAA,GACjC,mBAAAK,GAAA,SAAAN,KAAA,CAAAX,KAAA,MAAA/B,SAAA,QACH,CAAC,CAED,MAAO,IAAM,CAAAiD,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIvC,EAAE,CAAE+B,WAAW,CAAED,SAAS,CAAK,CAC5D,kCAAAU,KAAA,CAAAjC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAO,SAAAgC,SAAO9B,QAAQ,MAAAuB,WAAA,QAAA1B,mBAAA,GAAAI,IAAA,UAAA8B,UAAAC,SAAA,iBAAAA,SAAA,CAAA5B,IAAA,CAAA4B,SAAA,CAAA3B,IAAA,SAChBkB,WAAW,CAAGJ,SAAS,CAACvC,MAAM,CAAGwC,WAAW,CAACxC,MAAM,CACvD,GAAI2C,WAAW,CAAG,CAAC,CAAE,CACnBA,WAAW,CAAG,CAAC,CACjB,CAEAvB,QAAQ,CAAC,CACPjB,IAAI,CAAE,oBAAoB,CAC1BC,OAAO,CAAE,CAAEK,EAAE,CAAFA,EAAE,CAAEC,IAAI,CAAE,CAAE6B,SAAS,CAATA,SAAS,CAAEI,WAAW,CAAXA,WAAW,CAAEH,WAAW,CAAXA,WAAY,CAAE,CAC/D,CAAC,CAAC,CAACY,SAAA,CAAA3B,IAAA,SAEG,CAAA7B,WAAW,CAACyD,YAAY,CAAC5C,EAAE,CAAC,yBAAA2C,SAAA,CAAAxB,IAAA,MAAAsB,QAAA,GACnC,mBAAAI,GAAA,SAAAL,KAAA,CAAAnB,KAAA,MAAA/B,SAAA,QACH,CAAC,CAED,cAAe,CAAAF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}