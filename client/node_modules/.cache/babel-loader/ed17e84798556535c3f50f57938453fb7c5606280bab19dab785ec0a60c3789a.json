{"ast":null,"code":"import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { token } from './auth';\nconst baseUrl = `${backendUrl}/api/posts`;\nconst setConfig = () => {\n  return {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n};\nconst getPosts = async (sortBy, limit, page) => {\n  const response = await axios.get(`${baseUrl}/?sortby=${sortBy}&limit=${limit}&page=${page}`);\n  return response.data;\n};\nconst getSubPosts = async (limit, page) => {\n  const response = await axios.get(`${baseUrl}/subscribed/?limit=${limit}&page=${page}`, setConfig());\n  return response.data;\n};\nconst getSearchResults = async (query, limit, page) => {\n  const response = await axios.get(`${baseUrl}/search/?query=${query}&limit=${limit}&page=${page}`);\n  return response.data;\n};\nconst addNew = async postObj => {\n  const response = await axios.post(`${baseUrl}`, postObj, setConfig());\n  return response.data;\n};\nconst editPost = async (id, postObj) => {\n  const response = await axios.patch(`${baseUrl}/${id}`, postObj, setConfig());\n  return response.data;\n};\nconst getPostComments = async id => {\n  const response = await axios.get(`${baseUrl}/${id}/comments`);\n  return response.data;\n};\nconst upvotePost = async id => {\n  const response = await axios.post(`${baseUrl}/${id}/upvote`, null, setConfig());\n  return response.data;\n};\nconst downvotePost = async id => {\n  const response = await axios.post(`${baseUrl}/${id}/downvote`, null, setConfig());\n  return response.data;\n};\nconst deletePost = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`, setConfig());\n  return response.data;\n};\nconst upvoteComment = async (postId, commentId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/upvote`, null, setConfig());\n  return response.data;\n};\nconst downvoteComment = async (postId, commentId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/downvote`, null, setConfig());\n  return response.data;\n};\nconst upvoteReply = async (postId, commentId, replyId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/upvote`, null, setConfig());\n  return response.data;\n};\nconst downvoteReply = async (postId, commentId, replyId) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/downvote`, null, setConfig());\n  return response.data;\n};\nconst postComment = async (postId, commentObj) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment`, commentObj, setConfig());\n  return response.data;\n};\nconst postReply = async (postId, commentId, replyObj) => {\n  const response = await axios.post(`${baseUrl}/${postId}/comment/${commentId}/reply`, replyObj, setConfig());\n  return response.data;\n};\nconst updateComment = async (postId, commentId, commentObj) => {\n  const response = await axios.patch(`${baseUrl}/${postId}/comment/${commentId}`, commentObj, setConfig());\n  return response.data;\n};\nconst removeComment = async (postId, commentId) => {\n  const response = await axios.delete(`${baseUrl}/${postId}/comment/${commentId}`, setConfig());\n  return response.data;\n};\nconst updateReply = async (postId, commentId, replyId, replyObj) => {\n  const response = await axios.patch(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`, replyObj, setConfig());\n  return response.data;\n};\nconst removeReply = async (postId, commentId, replyId) => {\n  const response = await axios.delete(`${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`, setConfig());\n  return response.data;\n};\nconst postService = {\n  getPosts,\n  getSubPosts,\n  getSearchResults,\n  addNew,\n  editPost,\n  getPostComments,\n  upvotePost,\n  downvotePost,\n  deletePost,\n  upvoteComment,\n  downvoteComment,\n  upvoteReply,\n  downvoteReply,\n  postComment,\n  postReply,\n  updateComment,\n  removeComment,\n  updateReply,\n  removeReply\n};\nexport default postService;","map":{"version":3,"names":["axios","backendUrl","token","baseUrl","setConfig","headers","getPosts","sortBy","limit","page","response","get","data","getSubPosts","getSearchResults","query","addNew","postObj","post","editPost","id","patch","getPostComments","upvotePost","downvotePost","deletePost","delete","upvoteComment","postId","commentId","downvoteComment","upvoteReply","replyId","downvoteReply","postComment","commentObj","postReply","replyObj","updateComment","removeComment","updateReply","removeReply","postService"],"sources":["C:/Ak/E/reddish-master/client/src/services/posts.js"],"sourcesContent":["import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { token } from './auth';\n\nconst baseUrl = `${backendUrl}/api/posts`;\n\nconst setConfig = () => {\n  return {\n    headers: { 'x-auth-token': token },\n  };\n};\n\nconst getPosts = async (sortBy, limit, page) => {\n  const response = await axios.get(\n    `${baseUrl}/?sortby=${sortBy}&limit=${limit}&page=${page}`\n  );\n  return response.data;\n};\n\nconst getSubPosts = async (limit, page) => {\n  const response = await axios.get(\n    `${baseUrl}/subscribed/?limit=${limit}&page=${page}`,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst getSearchResults = async (query, limit, page) => {\n  const response = await axios.get(\n    `${baseUrl}/search/?query=${query}&limit=${limit}&page=${page}`\n  );\n  return response.data;\n};\n\nconst addNew = async (postObj) => {\n  const response = await axios.post(`${baseUrl}`, postObj, setConfig());\n  return response.data;\n};\n\nconst editPost = async (id, postObj) => {\n  const response = await axios.patch(`${baseUrl}/${id}`, postObj, setConfig());\n  return response.data;\n};\n\nconst getPostComments = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}/comments`);\n  return response.data;\n};\n\nconst upvotePost = async (id) => {\n  const response = await axios.post(\n    `${baseUrl}/${id}/upvote`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst downvotePost = async (id) => {\n  const response = await axios.post(\n    `${baseUrl}/${id}/downvote`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst deletePost = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`, setConfig());\n  return response.data;\n};\n\nconst upvoteComment = async (postId, commentId) => {\n  const response = await axios.post(\n    `${baseUrl}/${postId}/comment/${commentId}/upvote`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst downvoteComment = async (postId, commentId) => {\n  const response = await axios.post(\n    `${baseUrl}/${postId}/comment/${commentId}/downvote`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst upvoteReply = async (postId, commentId, replyId) => {\n  const response = await axios.post(\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/upvote`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst downvoteReply = async (postId, commentId, replyId) => {\n  const response = await axios.post(\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}/downvote`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst postComment = async (postId, commentObj) => {\n  const response = await axios.post(\n    `${baseUrl}/${postId}/comment`,\n    commentObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst postReply = async (postId, commentId, replyObj) => {\n  const response = await axios.post(\n    `${baseUrl}/${postId}/comment/${commentId}/reply`,\n    replyObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst updateComment = async (postId, commentId, commentObj) => {\n  const response = await axios.patch(\n    `${baseUrl}/${postId}/comment/${commentId}`,\n    commentObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst removeComment = async (postId, commentId) => {\n  const response = await axios.delete(\n    `${baseUrl}/${postId}/comment/${commentId}`,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst updateReply = async (postId, commentId, replyId, replyObj) => {\n  const response = await axios.patch(\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`,\n    replyObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst removeReply = async (postId, commentId, replyId) => {\n  const response = await axios.delete(\n    `${baseUrl}/${postId}/comment/${commentId}/reply/${replyId}`,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst postService = {\n  getPosts,\n  getSubPosts,\n  getSearchResults,\n  addNew,\n  editPost,\n  getPostComments,\n  upvotePost,\n  downvotePost,\n  deletePost,\n  upvoteComment,\n  downvoteComment,\n  upvoteReply,\n  downvoteReply,\n  postComment,\n  postReply,\n  updateComment,\n  removeComment,\n  updateReply,\n  removeReply,\n};\n\nexport default postService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}