{"ast":null,"code":"import _regeneratorRuntime from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import subService from'../services/subs';var subReducer=function subReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SET_ALL_SUBS_LIST':return _objectSpread(_objectSpread({},state),{},{allSubs:action.payload});case'SET_TOP_SUBS_LIST':return _objectSpread(_objectSpread({},state),{},{topSubs:action.payload});case'SUBSCRIBE_SUB_FROM_LIST':return _objectSpread(_objectSpread({},state),{},{topSubs:state.topSubs.map(function(t){return t.id!==action.payload.id?t:_objectSpread(_objectSpread({},t),action.payload.data);})});case'ADD_NEW_SUB':return _objectSpread(_objectSpread({},state),{},{allSubs:[].concat(_toConsumableArray(state.allSubs),[action.payload])});default:return state;}};export var setSubList=function setSubList(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var subs;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return subService.getAllSubreddits();case 2:subs=_context.sent;dispatch({type:'SET_ALL_SUBS_LIST',payload:subs});case 4:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var setTopSubsList=function setTopSubsList(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var top10Subs;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return subService.getTopSubreddits();case 2:top10Subs=_context2.sent;dispatch({type:'SET_TOP_SUBS_LIST',payload:top10Subs});case 4:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var toggleSubscribe=function toggleSubscribe(id,subscribedBy){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var subscriberCount;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:subscriberCount=subscribedBy.length;dispatch({type:'SUBSCRIBE_SUB_FROM_LIST',payload:{id:id,data:{subscribedBy:subscribedBy,subscriberCount:subscriberCount}}});_context3.next=4;return subService.subscribeSub(id);case 4:case\"end\":return _context3.stop();}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var addNewSub=function addNewSub(subredditObj){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){var createdSub;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return subService.createSubreddit(subredditObj);case 2:createdSub=_context4.sent;dispatch({type:'ADD_NEW_SUB',payload:{subredditName:createdSub.subredditName,id:createdSub.id}});case 4:case\"end\":return _context4.stop();}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export default subReducer;","map":{"version":3,"names":["subService","subReducer","state","arguments","length","undefined","action","type","_objectSpread","allSubs","payload","topSubs","map","t","id","data","concat","_toConsumableArray","setSubList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","subs","wrap","_callee$","_context","prev","next","getAllSubreddits","sent","stop","_x","apply","setTopSubsList","_ref2","_callee2","top10Subs","_callee2$","_context2","getTopSubreddits","_x2","toggleSubscribe","subscribedBy","_ref3","_callee3","subscriberCount","_callee3$","_context3","subscribeSub","_x3","addNewSub","subredditObj","_ref4","_callee4","createdSub","_callee4$","_context4","createSubreddit","subredditName","_x4"],"sources":["C:/Ak/E/reddish-master/client/src/reducers/subReducer.js"],"sourcesContent":["import subService from '../services/subs';\n\nconst subReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_ALL_SUBS_LIST':\n      return { ...state, allSubs: action.payload };\n    case 'SET_TOP_SUBS_LIST':\n      return { ...state, topSubs: action.payload };\n    case 'SUBSCRIBE_SUB_FROM_LIST':\n      return {\n        ...state,\n        topSubs: state.topSubs.map((t) =>\n          t.id !== action.payload.id ? t : { ...t, ...action.payload.data }\n        ),\n      };\n    case 'ADD_NEW_SUB':\n      return {\n        ...state,\n        allSubs: [...state.allSubs, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setSubList = () => {\n  return async (dispatch) => {\n    const subs = await subService.getAllSubreddits();\n\n    dispatch({\n      type: 'SET_ALL_SUBS_LIST',\n      payload: subs,\n    });\n  };\n};\n\nexport const setTopSubsList = () => {\n  return async (dispatch) => {\n    const top10Subs = await subService.getTopSubreddits();\n\n    dispatch({\n      type: 'SET_TOP_SUBS_LIST',\n      payload: top10Subs,\n    });\n  };\n};\n\nexport const toggleSubscribe = (id, subscribedBy) => {\n  return async (dispatch) => {\n    const subscriberCount = subscribedBy.length;\n\n    dispatch({\n      type: 'SUBSCRIBE_SUB_FROM_LIST',\n      payload: { id, data: { subscribedBy, subscriberCount } },\n    });\n\n    await subService.subscribeSub(id);\n  };\n};\n\nexport const addNewSub = (subredditObj) => {\n  return async (dispatch) => {\n    const createdSub = await subService.createSubreddit(subredditObj);\n\n    dispatch({\n      type: 'ADD_NEW_SUB',\n      payload: {\n        subredditName: createdSub.subredditName,\n        id: createdSub.id,\n      },\n    });\n  };\n};\n\nexport default subReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}