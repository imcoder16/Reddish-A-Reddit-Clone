{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ak\\\\E\\\\reddish-master\\\\client\\\\src\\\\components\\\\TopSubsPanel.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleSubscribe } from '../reducers/subReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport SubFormModal from './SubFormModal';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport storageService from '../utils/localStorage';\nimport { Paper, Typography, useMediaQuery, Link, Button } from '@material-ui/core';\nimport { useSubPanelStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopSubsPanel = () => {\n  _s();\n  const {\n    subs,\n    user\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const classes = useSubPanelStyles();\n  const theme = useTheme();\n  const isNotDesktop = useMediaQuery(theme.breakpoints.down('md'));\n  if (isNotDesktop) {\n    return null;\n  }\n  const loggedUser = storageService.loadUser() || user;\n  const loadingSubs = !subs || !subs.topSubs;\n  const isSubscribed = (subscribedBy, user) => {\n    return subscribedBy.includes(user.id);\n  };\n  const handleJoinSub = async (id, subscribedBy, subredditName) => {\n    try {\n      let updatedSubscribedBy;\n      if (subscribedBy.includes(user.id)) {\n        updatedSubscribedBy = subscribedBy.filter(s => s !== user.id);\n      } else {\n        updatedSubscribedBy = [...subscribedBy, user.id];\n      }\n      dispatch(toggleSubscribe(id, updatedSubscribedBy));\n      let message = subscribedBy.includes(user.id) ? `Unsubscribed from r/${subredditName}` : `Subscribed to r/${subredditName}!`;\n      dispatch(notify(message, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    variant: \"outlined\",\n    className: classes.mainPaper,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.listPaper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"secondary\",\n        className: classes.title,\n        children: \"Top Subreddishes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), loadingSubs ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        text: \"Fetching subs data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : subs.topSubs.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.listWrapper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.listItem,\n          children: [`${i + 1}. `, /*#__PURE__*/_jsxDEV(Link, {\n            component: RouterLink,\n            to: `/r/${s.subredditName}`,\n            color: \"primary\",\n            children: [\"r/\", s.subredditName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), ` - ${s.subscriberCount} members `]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), loggedUser && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          size: \"small\",\n          startIcon: isSubscribed(s.subscribedBy, user) ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 23\n          }, this),\n          onClick: () => handleJoinSub(s.id, s.subscribedBy, s.subredditName),\n          children: isSubscribed(s.subscribedBy, user) ? 'Joined' : 'Join'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, s.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), loggedUser && /*#__PURE__*/_jsxDEV(SubFormModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TopSubsPanel, \"oEHjG2afa/VAGyAdtpFLZ7zdSXo=\", false, function () {\n  return [useSelector, useDispatch, useSubPanelStyles, useTheme, useMediaQuery];\n});\n_c = TopSubsPanel;\nexport default TopSubsPanel;\nvar _c;\n$RefreshReg$(_c, \"TopSubsPanel\");","map":{"version":3,"names":["React","Link","RouterLink","useSelector","useDispatch","toggleSubscribe","notify","SubFormModal","LoadingSpinner","getErrorMsg","storageService","Paper","Typography","useMediaQuery","Button","useSubPanelStyles","useTheme","AddIcon","CheckIcon","jsxDEV","_jsxDEV","TopSubsPanel","_s","subs","user","state","dispatch","classes","theme","isNotDesktop","breakpoints","down","loggedUser","loadUser","loadingSubs","topSubs","isSubscribed","subscribedBy","includes","id","handleJoinSub","subredditName","updatedSubscribedBy","filter","s","message","err","variant","className","mainPaper","children","listPaper","color","title","fileName","_jsxFileName","lineNumber","columnNumber","text","map","i","listWrapper","listItem","component","to","subscriberCount","size","startIcon","onClick","_c","$RefreshReg$"],"sources":["C:/Ak/E/reddish-master/client/src/components/TopSubsPanel.js"],"sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleSubscribe } from '../reducers/subReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport SubFormModal from './SubFormModal';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport storageService from '../utils/localStorage';\n\nimport {\n  Paper,\n  Typography,\n  useMediaQuery,\n  Link,\n  Button,\n} from '@material-ui/core';\nimport { useSubPanelStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst TopSubsPanel = () => {\n  const { subs, user } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const classes = useSubPanelStyles();\n  const theme = useTheme();\n  const isNotDesktop = useMediaQuery(theme.breakpoints.down('md'));\n\n  if (isNotDesktop) {\n    return null;\n  }\n\n  const loggedUser = storageService.loadUser() || user;\n\n  const loadingSubs = !subs || !subs.topSubs;\n\n  const isSubscribed = (subscribedBy, user) => {\n    return subscribedBy.includes(user.id);\n  };\n\n  const handleJoinSub = async (id, subscribedBy, subredditName) => {\n    try {\n      let updatedSubscribedBy;\n\n      if (subscribedBy.includes(user.id)) {\n        updatedSubscribedBy = subscribedBy.filter((s) => s !== user.id);\n      } else {\n        updatedSubscribedBy = [...subscribedBy, user.id];\n      }\n      dispatch(toggleSubscribe(id, updatedSubscribedBy));\n\n      let message = subscribedBy.includes(user.id)\n        ? `Unsubscribed from r/${subredditName}`\n        : `Subscribed to r/${subredditName}!`;\n      dispatch(notify(message, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.mainPaper}>\n      <Paper variant=\"outlined\" className={classes.listPaper}>\n        <Typography variant=\"h5\" color=\"secondary\" className={classes.title}>\n          Top Subreddishes\n        </Typography>\n        {loadingSubs ? (\n          <LoadingSpinner text=\"Fetching subs data...\" />\n        ) : (\n          subs.topSubs.map((s, i) => (\n            <div key={s.id} className={classes.listWrapper}>\n              <Typography variant=\"body2\" className={classes.listItem}>\n                {`${i + 1}. `}\n                <Link\n                  component={RouterLink}\n                  to={`/r/${s.subredditName}`}\n                  color=\"primary\"\n                >\n                  r/{s.subredditName}\n                </Link>\n                {` - ${s.subscriberCount} members `}\n              </Typography>\n              {loggedUser && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={\n                    isSubscribed(s.subscribedBy, user) ? (\n                      <CheckIcon />\n                    ) : (\n                      <AddIcon />\n                    )\n                  }\n                  onClick={() =>\n                    handleJoinSub(s.id, s.subscribedBy, s.subredditName)\n                  }\n                >\n                  {isSubscribed(s.subscribedBy, user) ? 'Joined' : 'Join'}\n                </Button>\n              )}\n            </div>\n          ))\n        )}\n      </Paper>\n      {loggedUser && <SubFormModal />}\n    </Paper>\n  );\n};\n\nexport default TopSubsPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}