{"ast":null,"code":"import _regeneratorRuntime from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React from'react';import{Link as RouterLink}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{toggleSubscribe}from'../reducers/subReducer';import{notify}from'../reducers/notificationReducer';import SubFormModal from'./SubFormModal';import LoadingSpinner from'./LoadingSpinner';import getErrorMsg from'../utils/getErrorMsg';import storageService from'../utils/localStorage';import{Paper,Typography,useMediaQuery,Link,Button}from'@material-ui/core';import{useSubPanelStyles}from'../styles/muiStyles';import{useTheme}from'@material-ui/core/styles';import AddIcon from'@material-ui/icons/Add';import CheckIcon from'@material-ui/icons/Check';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TopSubsPanel=function TopSubsPanel(){var _useSelector=useSelector(function(state){return state;}),subs=_useSelector.subs,user=_useSelector.user;var dispatch=useDispatch();var classes=useSubPanelStyles();var theme=useTheme();var isNotDesktop=useMediaQuery(theme.breakpoints.down('md'));if(isNotDesktop){return null;}var loggedUser=storageService.loadUser()||user;var loadingSubs=!subs||!subs.topSubs;var isSubscribed=function isSubscribed(subscribedBy,user){return subscribedBy.includes(user.id);};var handleJoinSub=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id,subscribedBy,subredditName){var updatedSubscribedBy,message;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:try{if(subscribedBy.includes(user.id)){updatedSubscribedBy=subscribedBy.filter(function(s){return s!==user.id;});}else{updatedSubscribedBy=[].concat(_toConsumableArray(subscribedBy),[user.id]);}dispatch(toggleSubscribe(id,updatedSubscribedBy));message=subscribedBy.includes(user.id)?\"Unsubscribed from r/\".concat(subredditName):\"Subscribed to r/\".concat(subredditName,\"!\");dispatch(notify(message,'success'));}catch(err){dispatch(notify(getErrorMsg(err),'error'));}case 1:case\"end\":return _context.stop();}},_callee);}));return function handleJoinSub(_x,_x2,_x3){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",className:classes.mainPaper,children:[/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",className:classes.listPaper,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",color:\"secondary\",className:classes.title,children:\"Top Subreddishes\"}),loadingSubs?/*#__PURE__*/_jsx(LoadingSpinner,{text:\"Fetching subs data...\"}):subs.topSubs.map(function(s,i){return/*#__PURE__*/_jsxs(\"div\",{className:classes.listWrapper,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:classes.listItem,children:[\"\".concat(i+1,\". \"),/*#__PURE__*/_jsxs(Link,{component:RouterLink,to:\"/r/\".concat(s.subredditName),color:\"primary\",children:[\"r/\",s.subredditName]}),\" - \".concat(s.subscriberCount,\" members \")]}),loggedUser&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",size:\"small\",startIcon:isSubscribed(s.subscribedBy,user)?/*#__PURE__*/_jsx(CheckIcon,{}):/*#__PURE__*/_jsx(AddIcon,{}),onClick:function onClick(){return handleJoinSub(s.id,s.subscribedBy,s.subredditName);},children:isSubscribed(s.subscribedBy,user)?'Joined':'Join'})]},s.id);})]}),loggedUser&&/*#__PURE__*/_jsx(SubFormModal,{})]});};export default TopSubsPanel;","map":{"version":3,"names":["React","Link","RouterLink","useSelector","useDispatch","toggleSubscribe","notify","SubFormModal","LoadingSpinner","getErrorMsg","storageService","Paper","Typography","useMediaQuery","Button","useSubPanelStyles","useTheme","AddIcon","CheckIcon","jsx","_jsx","jsxs","_jsxs","TopSubsPanel","_useSelector","state","subs","user","dispatch","classes","theme","isNotDesktop","breakpoints","down","loggedUser","loadUser","loadingSubs","topSubs","isSubscribed","subscribedBy","includes","id","handleJoinSub","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","subredditName","updatedSubscribedBy","message","wrap","_callee$","_context","prev","next","filter","s","concat","_toConsumableArray","err","stop","_x","_x2","_x3","apply","arguments","variant","className","mainPaper","children","listPaper","color","title","text","map","i","listWrapper","listItem","component","to","subscriberCount","size","startIcon","onClick"],"sources":["C:/Ak/E/reddish-master/client/src/components/TopSubsPanel.js"],"sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleSubscribe } from '../reducers/subReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport SubFormModal from './SubFormModal';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport storageService from '../utils/localStorage';\n\nimport {\n  Paper,\n  Typography,\n  useMediaQuery,\n  Link,\n  Button,\n} from '@material-ui/core';\nimport { useSubPanelStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst TopSubsPanel = () => {\n  const { subs, user } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const classes = useSubPanelStyles();\n  const theme = useTheme();\n  const isNotDesktop = useMediaQuery(theme.breakpoints.down('md'));\n\n  if (isNotDesktop) {\n    return null;\n  }\n\n  const loggedUser = storageService.loadUser() || user;\n\n  const loadingSubs = !subs || !subs.topSubs;\n\n  const isSubscribed = (subscribedBy, user) => {\n    return subscribedBy.includes(user.id);\n  };\n\n  const handleJoinSub = async (id, subscribedBy, subredditName) => {\n    try {\n      let updatedSubscribedBy;\n\n      if (subscribedBy.includes(user.id)) {\n        updatedSubscribedBy = subscribedBy.filter((s) => s !== user.id);\n      } else {\n        updatedSubscribedBy = [...subscribedBy, user.id];\n      }\n      dispatch(toggleSubscribe(id, updatedSubscribedBy));\n\n      let message = subscribedBy.includes(user.id)\n        ? `Unsubscribed from r/${subredditName}`\n        : `Subscribed to r/${subredditName}!`;\n      dispatch(notify(message, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.mainPaper}>\n      <Paper variant=\"outlined\" className={classes.listPaper}>\n        <Typography variant=\"h5\" color=\"secondary\" className={classes.title}>\n          Top Subreddishes\n        </Typography>\n        {loadingSubs ? (\n          <LoadingSpinner text=\"Fetching subs data...\" />\n        ) : (\n          subs.topSubs.map((s, i) => (\n            <div key={s.id} className={classes.listWrapper}>\n              <Typography variant=\"body2\" className={classes.listItem}>\n                {`${i + 1}. `}\n                <Link\n                  component={RouterLink}\n                  to={`/r/${s.subredditName}`}\n                  color=\"primary\"\n                >\n                  r/{s.subredditName}\n                </Link>\n                {` - ${s.subscriberCount} members `}\n              </Typography>\n              {loggedUser && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={\n                    isSubscribed(s.subscribedBy, user) ? (\n                      <CheckIcon />\n                    ) : (\n                      <AddIcon />\n                    )\n                  }\n                  onClick={() =>\n                    handleJoinSub(s.id, s.subscribedBy, s.subredditName)\n                  }\n                >\n                  {isSubscribed(s.subscribedBy, user) ? 'Joined' : 'Join'}\n                </Button>\n              )}\n            </div>\n          ))\n        )}\n      </Paper>\n      {loggedUser && <SubFormModal />}\n    </Paper>\n  );\n};\n\nexport default TopSubsPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}