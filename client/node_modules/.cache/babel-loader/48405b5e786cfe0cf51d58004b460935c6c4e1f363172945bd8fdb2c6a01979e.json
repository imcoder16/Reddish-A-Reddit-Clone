{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n  return Object.keys(obj).sort().reduce(function (inverse, name) {\n    inverse[obj[name]] = \"&\" + name + \";\";\n    return inverse;\n  }, {});\n}\nfunction getInverseReplacer(inverse) {\n  var single = [];\n  var multiple = [];\n  for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n    var k = _a[_i];\n    if (k.length === 1) {\n      // Add value to single array\n      single.push(\"\\\\\" + k);\n    } else {\n      // Add value to multiple array\n      multiple.push(k);\n    }\n  }\n  // Add ranges to single characters.\n  single.sort();\n  for (var start = 0; start < single.length - 1; start++) {\n    // Find the end of a run of characters\n    var end = start;\n    while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n      end += 1;\n    }\n    var count = 1 + end - start;\n    // We want to replace at least three characters\n    if (count < 3) continue;\n    single.splice(start, count, single[start] + \"-\" + single[end]);\n  }\n  multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n  return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n  return function (data) {\n    return data.replace(re, function (name) {\n      return inverse[name];\n    }).replace(reNonASCII, singleCharReplacer);\n  };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n  return data.replace(reXmlChars, singleCharReplacer).replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","escape","encodeHTML","encodeXML","xml_json_1","require","inverseXML","getInverseObj","default","xmlReplacer","getInverseReplacer","getInverse","entities_json_1","inverseHTML","htmlReplacer","obj","keys","sort","reduce","inverse","name","single","multiple","_i","_a","length","k","push","start","end","charCodeAt","count","splice","unshift","join","RegExp","reNonASCII","singleCharReplacer","c","codePointAt","toString","toUpperCase","re","data","replace","reXmlChars"],"sources":["C:/Ak/E/reddish-master/client/node_modules/entities/lib/encode.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}