{"ast":null,"code":"import userService from '../services/user';\nimport postService from '../services/posts';\nconst userPageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FETCH_USER':\n      return action.payload;\n    case 'TOGGLE_USERPAGE_VOTE':\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          results: state.posts.results.map(r => r.id !== action.payload.id ? r : {\n            ...r,\n            ...action.payload.data\n          })\n        }\n      };\n    case 'LOAD_USER_POSTS':\n      return {\n        ...state,\n        posts: {\n          ...action.payload.posts,\n          results: [...state.posts.results, ...action.payload.posts.results]\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const fetchUser = username => {\n  return async dispatch => {\n    const user = await userService.getUser(username, 5, 1);\n    dispatch({\n      type: 'FETCH_USER',\n      payload: user\n    });\n  };\n};\nexport const loadUserPosts = (username, page) => {\n  return async dispatch => {\n    const user = await userService.getUser(username, 5, page);\n    dispatch({\n      type: 'LOAD_USER_POSTS',\n      payload: user\n    });\n  };\n};\nexport const toggleUpvote = (id, upvotedBy, downvotedBy) => {\n  return async dispatch => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n    dispatch({\n      type: 'TOGGLE_USERPAGE_VOTE',\n      payload: {\n        id,\n        data: {\n          upvotedBy,\n          pointsCount,\n          downvotedBy\n        }\n      }\n    });\n    await postService.upvotePost(id);\n  };\n};\nexport const toggleDownvote = (id, downvotedBy, upvotedBy) => {\n  return async dispatch => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n    dispatch({\n      type: 'TOGGLE_USERPAGE_VOTE',\n      payload: {\n        id,\n        data: {\n          upvotedBy,\n          pointsCount,\n          downvotedBy\n        }\n      }\n    });\n    await postService.downvotePost(id);\n  };\n};\nexport default userPageReducer;","map":{"version":3,"names":["userService","postService","userPageReducer","state","arguments","length","undefined","action","type","payload","posts","results","map","r","id","data","fetchUser","username","dispatch","user","getUser","loadUserPosts","page","toggleUpvote","upvotedBy","downvotedBy","pointsCount","upvotePost","toggleDownvote","downvotePost"],"sources":["C:/Ak/E/reddish-master/client/src/reducers/userPageReducer.js"],"sourcesContent":["import userService from '../services/user';\nimport postService from '../services/posts';\n\nconst userPageReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return action.payload;\n    case 'TOGGLE_USERPAGE_VOTE':\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          results: state.posts.results.map((r) =>\n            r.id !== action.payload.id ? r : { ...r, ...action.payload.data }\n          ),\n        },\n      };\n    case 'LOAD_USER_POSTS':\n      return {\n        ...state,\n        posts: {\n          ...action.payload.posts,\n          results: [...state.posts.results, ...action.payload.posts.results],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const fetchUser = (username) => {\n  return async (dispatch) => {\n    const user = await userService.getUser(username, 5, 1);\n\n    dispatch({\n      type: 'FETCH_USER',\n      payload: user,\n    });\n  };\n};\n\nexport const loadUserPosts = (username, page) => {\n  return async (dispatch) => {\n    const user = await userService.getUser(username, 5, page);\n\n    dispatch({\n      type: 'LOAD_USER_POSTS',\n      payload: user,\n    });\n  };\n};\n\nexport const toggleUpvote = (id, upvotedBy, downvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_USERPAGE_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.upvotePost(id);\n  };\n};\n\nexport const toggleDownvote = (id, downvotedBy, upvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_USERPAGE_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.downvotePost(id);\n  };\n};\n\nexport default userPageReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}