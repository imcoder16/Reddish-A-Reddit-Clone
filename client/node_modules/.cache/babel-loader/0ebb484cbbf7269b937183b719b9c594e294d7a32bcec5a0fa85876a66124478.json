{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ak\\\\E\\\\reddish-master\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from './reducers/userReducer';\nimport { fetchPosts } from './reducers/postReducer';\nimport { setSubList, setTopSubsList } from './reducers/subReducer';\nimport { setDarkMode } from './reducers/themeReducer';\nimport { notify } from './reducers/notificationReducer';\nimport NavBar from './components/NavBar';\nimport ToastNotif from './components/ToastNotif';\nimport Routes from './Routes';\nimport getErrorMsg from './utils/getErrorMsg';\nimport { Paper } from '@material-ui/core/';\nimport customTheme from './styles/customTheme';\nimport { useMainPaperStyles } from './styles/muiStyles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const classes = useMainPaperStyles();\n  const dispatch = useDispatch();\n  const {\n    darkMode\n  } = useSelector(state => state);\n  useEffect(() => {\n    const setPostsAndSubreddits = async () => {\n      try {\n        await dispatch(fetchPosts('hot'));\n        await dispatch(setSubList());\n        await dispatch(setTopSubsList());\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n    dispatch(setUser());\n    dispatch(setDarkMode());\n    setPostsAndSubreddits();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: customTheme(darkMode),\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 0,\n      children: [/*#__PURE__*/_jsxDEV(ToastNotif, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"O6Z3gKUtjX8MdGa8pbTdSR5ohTQ=\", false, function () {\n  return [useMainPaperStyles, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","setUser","fetchPosts","setSubList","setTopSubsList","setDarkMode","notify","NavBar","ToastNotif","Routes","getErrorMsg","Paper","customTheme","useMainPaperStyles","ThemeProvider","jsxDEV","_jsxDEV","App","_s","classes","dispatch","darkMode","state","setPostsAndSubreddits","err","theme","children","className","root","elevation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Ak/E/reddish-master/client/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from './reducers/userReducer';\nimport { fetchPosts } from './reducers/postReducer';\nimport { setSubList, setTopSubsList } from './reducers/subReducer';\nimport { setDarkMode } from './reducers/themeReducer';\nimport { notify } from './reducers/notificationReducer';\nimport NavBar from './components/NavBar';\nimport ToastNotif from './components/ToastNotif';\nimport Routes from './Routes';\nimport getErrorMsg from './utils/getErrorMsg';\n\nimport { Paper } from '@material-ui/core/';\nimport customTheme from './styles/customTheme';\nimport { useMainPaperStyles } from './styles/muiStyles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nconst App = () => {\n  const classes = useMainPaperStyles();\n  const dispatch = useDispatch();\n  const { darkMode } = useSelector((state) => state);\n\n  useEffect(() => {\n    const setPostsAndSubreddits = async () => {\n      try {\n        await dispatch(fetchPosts('hot'));\n        await dispatch(setSubList());\n        await dispatch(setTopSubsList());\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n\n    dispatch(setUser());\n    dispatch(setDarkMode());\n    setPostsAndSubreddits();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider theme={customTheme(darkMode)}>\n      <Paper className={classes.root} elevation={0}>\n        <ToastNotif />\n        <NavBar />\n        <Routes />\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,UAAU,EAAEC,cAAc,QAAQ,uBAAuB;AAClE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,MAAM,QAAQ,gCAAgC;AACvD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,qBAAqB;AAE7C,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,OAAO,GAAGN,kBAAkB,EAAE;EACpC,MAAMO,QAAQ,GAAGrB,WAAW,EAAE;EAC9B,MAAM;IAAEsB;EAAS,CAAC,GAAGrB,WAAW,CAAEsB,KAAK,IAAKA,KAAK,CAAC;EAElDxB,SAAS,CAAC,MAAM;IACd,MAAMyB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF,MAAMH,QAAQ,CAAClB,UAAU,CAAC,KAAK,CAAC,CAAC;QACjC,MAAMkB,QAAQ,CAACjB,UAAU,EAAE,CAAC;QAC5B,MAAMiB,QAAQ,CAAChB,cAAc,EAAE,CAAC;MAClC,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACZJ,QAAQ,CAACd,MAAM,CAACI,WAAW,CAACc,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;MAC7C;IACF,CAAC;IAEDJ,QAAQ,CAACnB,OAAO,EAAE,CAAC;IACnBmB,QAAQ,CAACf,WAAW,EAAE,CAAC;IACvBkB,qBAAqB,EAAE;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACF,aAAa;IAACW,KAAK,EAAEb,WAAW,CAACS,QAAQ,CAAE;IAAAK,QAAA,eAC1CV,OAAA,CAACL,KAAK;MAACgB,SAAS,EAAER,OAAO,CAACS,IAAK;MAACC,SAAS,EAAE,CAAE;MAAAH,QAAA,gBAC3CV,OAAA,CAACR,UAAU;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACdjB,OAAA,CAACT,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACVjB,OAAA,CAACP,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAEpB,CAAC;AAACf,EAAA,CA/BID,GAAG;EAAA,QACSJ,kBAAkB,EACjBd,WAAW,EACPC,WAAW;AAAA;AAAAkC,EAAA,GAH5BjB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}