{"ast":null,"code":"import _slicedToArray from\"C:/Ak/E/reddish-master/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import SubForm from'./SubForm';import{DialogTitle}from'./CustomDialogTitle';import{Dialog,DialogContent,Button,MenuItem,ListItemIcon}from'@material-ui/core';import{useDialogStyles}from'../styles/muiStyles';import AddCircleIcon from'@material-ui/icons/AddCircle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SubFormModal=function SubFormModal(_ref){var type=_ref.type,handleCloseMenu=_ref.handleCloseMenu;var classes=useDialogStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleOpenMenu=function handleOpenMenu(){handleClickOpen();handleCloseMenu();};return/*#__PURE__*/_jsxs(\"div\",{children:[type!=='menu'?/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:handleClickOpen,fullWidth:true,className:classes.createSubBtn,size:\"large\",startIcon:/*#__PURE__*/_jsx(AddCircleIcon,{}),children:\"Create New Subreddish\"}):/*#__PURE__*/_jsx(MenuItem,{onClick:handleOpenMenu,children:/*#__PURE__*/_jsxs(ListItemIcon,{children:[/*#__PURE__*/_jsx(AddCircleIcon,{style:{marginRight:7}}),\"Create Subreddish\"]})}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,maxWidth:\"sm\",classes:{paper:classes.dialogWrapper},fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{onClose:handleClose,children:\"Create a new subreddish\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(SubForm,{})})]})]});};export default SubFormModal;","map":{"version":3,"names":["React","useState","SubForm","DialogTitle","Dialog","DialogContent","Button","MenuItem","ListItemIcon","useDialogStyles","AddCircleIcon","jsx","_jsx","jsxs","_jsxs","SubFormModal","_ref","type","handleCloseMenu","classes","_useState","_useState2","_slicedToArray","open","setOpen","handleClickOpen","handleClose","handleOpenMenu","children","color","variant","onClick","fullWidth","className","createSubBtn","size","startIcon","style","marginRight","onClose","maxWidth","paper","dialogWrapper"],"sources":["C:/Ak/E/reddish-master/client/src/components/SubFormModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SubForm from './SubForm';\n\nimport { DialogTitle } from './CustomDialogTitle';\nimport {\n  Dialog,\n  DialogContent,\n  Button,\n  MenuItem,\n  ListItemIcon,\n} from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst SubFormModal = ({ type, handleCloseMenu }) => {\n  const classes = useDialogStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenMenu = () => {\n    handleClickOpen();\n    handleCloseMenu();\n  };\n\n  return (\n    <div>\n      {type !== 'menu' ? (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n          fullWidth\n          className={classes.createSubBtn}\n          size=\"large\"\n          startIcon={<AddCircleIcon />}\n        >\n          Create New Subreddish\n        </Button>\n      ) : (\n        <MenuItem onClick={handleOpenMenu}>\n          <ListItemIcon>\n            <AddCircleIcon style={{ marginRight: 7 }} />\n            Create Subreddish\n          </ListItemIcon>\n        </MenuItem>\n      )}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        classes={{ paper: classes.dialogWrapper }}\n        fullWidth\n      >\n        <DialogTitle onClose={handleClose}>Create a new subreddish</DialogTitle>\n        <DialogContent>\n          <SubForm />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SubFormModal;\n"],"mappings":"mHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAE/B,OAASC,WAAW,KAAQ,qBAAqB,CACjD,OACEC,MAAM,CACNC,aAAa,CACbC,MAAM,CACNC,QAAQ,CACRC,YAAY,KACP,mBAAmB,CAC1B,OAASC,eAAe,KAAQ,qBAAqB,CACrD,MAAO,CAAAC,aAAa,KAAM,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAAkC,IAA5B,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAEC,eAAe,CAAAF,IAAA,CAAfE,eAAe,CAC3C,GAAM,CAAAC,OAAO,CAAGV,eAAe,EAAE,CACjC,IAAAW,SAAA,CAAwBnB,QAAQ,CAAC,KAAK,CAAC,CAAAoB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpB,GAAM,CAAAI,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,CAAS,CAC5BD,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,GAAM,CAAAE,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxBF,OAAO,CAAC,KAAK,CAAC,CAChB,CAAC,CAED,GAAM,CAAAG,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC3BF,eAAe,EAAE,CACjBP,eAAe,EAAE,CACnB,CAAC,CAED,mBACEJ,KAAA,QAAAc,QAAA,EACGX,IAAI,GAAK,MAAM,cACdL,IAAA,CAACN,MAAM,EACLuB,KAAK,CAAC,SAAS,CACfC,OAAO,CAAC,WAAW,CACnBC,OAAO,CAAEN,eAAgB,CACzBO,SAAS,MACTC,SAAS,CAAEd,OAAO,CAACe,YAAa,CAChCC,IAAI,CAAC,OAAO,CACZC,SAAS,cAAExB,IAAA,CAACF,aAAa,IAAI,CAAAkB,QAAA,CAC9B,uBAED,EAAS,cAEThB,IAAA,CAACL,QAAQ,EAACwB,OAAO,CAAEJ,cAAe,CAAAC,QAAA,cAChCd,KAAA,CAACN,YAAY,EAAAoB,QAAA,eACXhB,IAAA,CAACF,aAAa,EAAC2B,KAAK,CAAE,CAAEC,WAAW,CAAE,CAAE,CAAE,EAAG,oBAE9C,GAAe,EAElB,cACDxB,KAAA,CAACV,MAAM,EACLmB,IAAI,CAAEA,IAAK,CACXgB,OAAO,CAAEb,WAAY,CACrBc,QAAQ,CAAC,IAAI,CACbrB,OAAO,CAAE,CAAEsB,KAAK,CAAEtB,OAAO,CAACuB,aAAc,CAAE,CAC1CV,SAAS,MAAAJ,QAAA,eAEThB,IAAA,CAACT,WAAW,EAACoC,OAAO,CAAEb,WAAY,CAAAE,QAAA,CAAC,yBAAuB,EAAc,cACxEhB,IAAA,CAACP,aAAa,EAAAuB,QAAA,cACZhB,IAAA,CAACV,OAAO,IAAG,EACG,GACT,GACL,CAEV,CAAC,CAED,cAAe,CAAAa,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}