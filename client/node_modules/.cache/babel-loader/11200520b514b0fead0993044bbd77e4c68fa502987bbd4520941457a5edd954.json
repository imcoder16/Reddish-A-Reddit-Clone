{"ast":null,"code":"import postService from '../services/posts';\nconst searchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_SEARCH_RESULTS':\n      return action.payload;\n    case 'TOGGLE_SEARCH_VOTE':\n      return {\n        ...state,\n        results: state.results.map(r => r.id !== action.payload.id ? r : {\n          ...r,\n          ...action.payload.data\n        })\n      };\n    case 'LOAD_SEARCH_POSTS':\n      return {\n        ...action.payload,\n        results: [...state.results, ...action.payload.results]\n      };\n    default:\n      return state;\n  }\n};\nexport const setSearchResults = query => {\n  return async dispatch => {\n    const results = await postService.getSearchResults(query, 10, 1);\n    dispatch({\n      type: 'SET_SEARCH_RESULTS',\n      payload: results\n    });\n  };\n};\nexport const loadSearchPosts = (query, page) => {\n  return async dispatch => {\n    const results = await postService.getSearchResults(query, 10, page);\n    dispatch({\n      type: 'LOAD_SEARCH_POSTS',\n      payload: results\n    });\n  };\n};\nexport const toggleUpvote = (id, upvotedBy, downvotedBy) => {\n  return async dispatch => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n    dispatch({\n      type: 'TOGGLE_SEARCH_VOTE',\n      payload: {\n        id,\n        data: {\n          upvotedBy,\n          pointsCount,\n          downvotedBy\n        }\n      }\n    });\n    await postService.upvotePost(id);\n  };\n};\nexport const toggleDownvote = (id, downvotedBy, upvotedBy) => {\n  return async dispatch => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n    dispatch({\n      type: 'TOGGLE_SEARCH_VOTE',\n      payload: {\n        id,\n        data: {\n          upvotedBy,\n          pointsCount,\n          downvotedBy\n        }\n      }\n    });\n    await postService.downvotePost(id);\n  };\n};\nexport default searchReducer;","map":{"version":3,"names":["postService","searchReducer","state","arguments","length","undefined","action","type","payload","results","map","r","id","data","setSearchResults","query","dispatch","getSearchResults","loadSearchPosts","page","toggleUpvote","upvotedBy","downvotedBy","pointsCount","upvotePost","toggleDownvote","downvotePost"],"sources":["C:/Ak/E/reddish-master/client/src/reducers/searchReducer.js"],"sourcesContent":["import postService from '../services/posts';\n\nconst searchReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_SEARCH_RESULTS':\n      return action.payload;\n    case 'TOGGLE_SEARCH_VOTE':\n      return {\n        ...state,\n        results: state.results.map((r) =>\n          r.id !== action.payload.id ? r : { ...r, ...action.payload.data }\n        ),\n      };\n    case 'LOAD_SEARCH_POSTS':\n      return {\n        ...action.payload,\n        results: [...state.results, ...action.payload.results],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setSearchResults = (query) => {\n  return async (dispatch) => {\n    const results = await postService.getSearchResults(query, 10, 1);\n\n    dispatch({\n      type: 'SET_SEARCH_RESULTS',\n      payload: results,\n    });\n  };\n};\n\nexport const loadSearchPosts = (query, page) => {\n  return async (dispatch) => {\n    const results = await postService.getSearchResults(query, 10, page);\n\n    dispatch({\n      type: 'LOAD_SEARCH_POSTS',\n      payload: results,\n    });\n  };\n};\n\nexport const toggleUpvote = (id, upvotedBy, downvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_SEARCH_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.upvotePost(id);\n  };\n};\n\nexport const toggleDownvote = (id, downvotedBy, upvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_SEARCH_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.downvotePost(id);\n  };\n};\n\nexport default searchReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}