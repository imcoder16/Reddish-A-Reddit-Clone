{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ak\\\\E\\\\reddish-master\\\\client\\\\src\\\\components\\\\PostCommentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPostComments, toggleUpvote, toggleDownvote } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport CommentInput from './CommentInput';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport CommentsDisplay from './CommentsDisplay';\nimport SortCommentsMenu from './SortCommentsMenu';\nimport ErrorPage from './ErrorPage';\nimport LoadingSpinner from './LoadingSpinner';\nimport TimeAgo from 'timeago-react';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport ReactHtmlParser from 'react-html-parser';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Container, Paper, useMediaQuery, Typography, Link, MenuItem, ListItemIcon, Divider } from '@material-ui/core';\nimport { usePostCommentsStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCommentsPage = () => {\n  _s();\n  const {\n    id: postId\n  } = useParams();\n  const post = useSelector(state => state.postComments);\n  const {\n    user,\n    darkMode\n  } = useSelector(state => state);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [pageError, setPageError] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getComments = async () => {\n      try {\n        await dispatch(fetchPostComments(postId));\n        setPageLoading(false);\n      } catch (err) {\n        setPageError(getErrorMsg(err));\n      }\n    };\n    getComments();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [postId]);\n  const classes = usePostCommentsStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  if (pageError) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.mainPaper,\n        children: /*#__PURE__*/_jsxDEV(ErrorPage, {\n          errorMsg: pageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  if (!post || pageLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.mainPaper,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          text: 'Fetching post comments...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    comments,\n    commentCount,\n    createdAt,\n    updatedAt\n  } = post;\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n  const formattedLink = postType === 'Link' && trimLink(prettifyLink(linkSubmission), 70);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    disableGutters: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.mainPaper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.topPortion,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.votesWrapper,\n          children: [/*#__PURE__*/_jsxDEV(UpvoteButton, {\n            user: user,\n            body: post,\n            handleUpvote: handleUpvoteToggle,\n            size: isMobile ? 'small' : 'medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            style: {\n              color: isUpvoted ? '#FF8b60' : isDownvoted ? '#9494FF' : darkMode ? '#e4e4e4' : '#333',\n              fontWeight: 600\n            },\n            children: pointsCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DownvoteButton, {\n            user: user,\n            body: post,\n            handleDownvote: handleDownvoteToggle,\n            size: isMobile ? 'small' : 'medium'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.postDetails,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              component: RouterLink,\n              to: `/r/${subreddit.subredditName}`,\n              children: `r/${subreddit.subredditName} `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              className: classes.userAndDate,\n              children: [\"\\u2022 Posted by\", /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: `/u/${author.username}`,\n                children: ` u/${author.username} `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(TimeAgo, {\n                datetime: new Date(createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), createdAt !== updatedAt && /*#__PURE__*/_jsxDEV(\"em\", {\n                children: [' â€¢ edited', \" \", /*#__PURE__*/_jsxDEV(TimeAgo, {\n                  datetime: new Date(updatedAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: classes.title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), postType === 'Text' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ReactHtmlParser(textSubmission)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this) : postType === 'Image' ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: imageSubmission.imageLink,\n            alt: title,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: classes.imagePost,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: title,\n              src: imageSubmission.imageLink,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Link, {\n            href: fixUrl(linkSubmission),\n            children: [formattedLink, \" \", /*#__PURE__*/_jsxDEV(OpenInNewIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.bottomBar,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              className: classes.bottomButton,\n              children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: [/*#__PURE__*/_jsxDEV(CommentIcon, {\n                  className: classes.commentIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: commentCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), user && user.id === author.id && /*#__PURE__*/_jsxDEV(EditDeleteMenu, {\n              id: id,\n              isMobile: isMobile,\n              title: title,\n              postType: postType,\n              subreddit: subreddit,\n              buttonType: \"buttonGroup\",\n              textSubmission: textSubmission,\n              linkSubmission: linkSubmission\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CommentInput, {\n            user: user,\n            postId: id,\n            isMobile: isMobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SortCommentsMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentsDisplay, {\n        comments: comments,\n        postId: id,\n        isMobile: isMobile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCommentsPage, \"9LkXJBN33xdizQYTlP9cbnP4pNY=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch, usePostCommentsStyles, useTheme, useMediaQuery];\n});\n_c = PostCommentsPage;\nexport default PostCommentsPage;\nvar _c;\n$RefreshReg$(_c, \"PostCommentsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","RouterLink","useSelector","useDispatch","fetchPostComments","toggleUpvote","toggleDownvote","notify","CommentInput","UpvoteButton","DownvoteButton","EditDeleteMenu","CommentsDisplay","SortCommentsMenu","ErrorPage","LoadingSpinner","TimeAgo","trimLink","prettifyLink","fixUrl","ReactHtmlParser","getErrorMsg","Container","Paper","useMediaQuery","Typography","MenuItem","ListItemIcon","Divider","usePostCommentsStyles","useTheme","OpenInNewIcon","CommentIcon","jsxDEV","_jsxDEV","PostCommentsPage","_s","id","postId","post","state","postComments","user","darkMode","pageLoading","setPageLoading","pageError","setPageError","dispatch","getComments","err","classes","theme","isMobile","breakpoints","down","disableGutters","children","variant","className","mainPaper","errorMsg","fileName","_jsxFileName","lineNumber","columnNumber","text","title","postType","textSubmission","linkSubmission","imageSubmission","subreddit","author","upvotedBy","downvotedBy","pointsCount","comments","commentCount","createdAt","updatedAt","isUpvoted","includes","isDownvoted","handleUpvoteToggle","updatedUpvotedBy","filter","u","updatedDownvotedBy","d","handleDownvoteToggle","formattedLink","topPortion","votesWrapper","body","handleUpvote","size","style","color","fontWeight","handleDownvote","postDetails","component","to","subredditName","userAndDate","username","datetime","Date","href","imageLink","alt","target","rel","imagePost","src","image","fontSize","bottomBar","bottomButton","commentIcon","buttonType","divider","_c","$RefreshReg$"],"sources":["C:/Ak/E/reddish-master/client/src/components/PostCommentsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchPostComments,\n  toggleUpvote,\n  toggleDownvote,\n} from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport CommentInput from './CommentInput';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport CommentsDisplay from './CommentsDisplay';\nimport SortCommentsMenu from './SortCommentsMenu';\nimport ErrorPage from './ErrorPage';\nimport LoadingSpinner from './LoadingSpinner';\nimport TimeAgo from 'timeago-react';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport ReactHtmlParser from 'react-html-parser';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Container,\n  Paper,\n  useMediaQuery,\n  Typography,\n  Link,\n  MenuItem,\n  ListItemIcon,\n  Divider,\n} from '@material-ui/core';\nimport { usePostCommentsStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst PostCommentsPage = () => {\n  const { id: postId } = useParams();\n  const post = useSelector((state) => state.postComments);\n  const { user, darkMode } = useSelector((state) => state);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [pageError, setPageError] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getComments = async () => {\n      try {\n        await dispatch(fetchPostComments(postId));\n        setPageLoading(false);\n      } catch (err) {\n        setPageError(getErrorMsg(err));\n      }\n    };\n    getComments();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [postId]);\n\n  const classes = usePostCommentsStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n  if (pageError) {\n    return (\n      <Container disableGutters>\n        <Paper variant=\"outlined\" className={classes.mainPaper}>\n          <ErrorPage errorMsg={pageError} />\n        </Paper>\n      </Container>\n    );\n  }\n\n  if (!post || pageLoading) {\n    return (\n      <Container disableGutters>\n        <Paper variant=\"outlined\" className={classes.mainPaper}>\n          <LoadingSpinner text={'Fetching post comments...'} />\n        </Paper>\n      </Container>\n    );\n  }\n\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    comments,\n    commentCount,\n    createdAt,\n    updatedAt,\n  } = post;\n\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const formattedLink =\n    postType === 'Link' && trimLink(prettifyLink(linkSubmission), 70);\n\n  return (\n    <Container disableGutters>\n      <Paper variant=\"outlined\" className={classes.mainPaper}>\n        <div className={classes.topPortion}>\n          <div className={classes.votesWrapper}>\n            <UpvoteButton\n              user={user}\n              body={post}\n              handleUpvote={handleUpvoteToggle}\n              size={isMobile ? 'small' : 'medium'}\n            />\n            <Typography\n              variant=\"body1\"\n              style={{\n                color: isUpvoted\n                  ? '#FF8b60'\n                  : isDownvoted\n                  ? '#9494FF'\n                  : darkMode\n                  ? '#e4e4e4'\n                  : '#333',\n                fontWeight: 600,\n              }}\n            >\n              {pointsCount}\n            </Typography>\n            <DownvoteButton\n              user={user}\n              body={post}\n              handleDownvote={handleDownvoteToggle}\n              size={isMobile ? 'small' : 'medium'}\n            />\n          </div>\n          <div className={classes.postDetails}>\n            <Typography variant=\"subtitle2\">\n              <Link component={RouterLink} to={`/r/${subreddit.subredditName}`}>\n                {`r/${subreddit.subredditName} `}\n              </Link>\n              <Typography variant=\"caption\" className={classes.userAndDate}>\n                â€¢ Posted by\n                <Link component={RouterLink} to={`/u/${author.username}`}>\n                  {` u/${author.username} `}\n                </Link>\n                â€¢ <TimeAgo datetime={new Date(createdAt)} />\n                {createdAt !== updatedAt && (\n                  <em>\n                    {' â€¢ edited'} <TimeAgo datetime={new Date(updatedAt)} />\n                  </em>\n                )}\n              </Typography>\n            </Typography>\n            <Typography variant=\"h5\" className={classes.title}>\n              {title}\n            </Typography>\n            {postType === 'Text' ? (\n              <div>{ReactHtmlParser(textSubmission)}</div>\n            ) : postType === 'Image' ? (\n              <a\n                href={imageSubmission.imageLink}\n                alt={title}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.imagePost}\n              >\n                <img\n                  alt={title}\n                  src={imageSubmission.imageLink}\n                  className={classes.image}\n                />\n              </a>\n            ) : (\n              <Link href={fixUrl(linkSubmission)}>\n                {formattedLink} <OpenInNewIcon fontSize=\"inherit\" />\n              </Link>\n            )}\n            <div className={classes.bottomBar}>\n              <MenuItem className={classes.bottomButton}>\n                <ListItemIcon>\n                  <CommentIcon className={classes.commentIcon} />\n                  <Typography variant=\"subtitle2\">{commentCount}</Typography>\n                </ListItemIcon>\n              </MenuItem>\n              {user && user.id === author.id && (\n                <EditDeleteMenu\n                  id={id}\n                  isMobile={isMobile}\n                  title={title}\n                  postType={postType}\n                  subreddit={subreddit}\n                  buttonType=\"buttonGroup\"\n                  textSubmission={textSubmission}\n                  linkSubmission={linkSubmission}\n                />\n              )}\n            </div>\n            <CommentInput user={user} postId={id} isMobile={isMobile} />\n            <SortCommentsMenu />\n          </div>\n        </div>\n        <Divider className={classes.divider} />\n        <CommentsDisplay comments={comments} postId={id} isMobile={isMobile} />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default PostCommentsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}